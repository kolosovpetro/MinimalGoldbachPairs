using FluentAssertions;
using GoldbachPairs.Run;
using Xunit;

namespace GoldbachPairs.Tests;

public class Tests
{
    [Theory]
    [InlineData(6, 3, 3)]
    [InlineData(7, 3, 4)]
    [InlineData(8, 3, 4)]
    [InlineData(9, 3, 4)]
    [InlineData(10, 3, 4)]
    [InlineData(11, 3, 5)]
    [InlineData(12, 3, 5)]
    [InlineData(13, 3, 6)]
    [InlineData(14, 3, 6)]
    [InlineData(15, 3, 6)]
    [InlineData(49, 3, 15)]
    [InlineData(50, 3, 15)]
    [InlineData(100, 3, 25)]
    [InlineData(150, 3, 35)]
    [InlineData(1000, 3, 168)]
    [InlineData(10000, 3, 1229)]
    [InlineData(100000, 3, 9592)]
    [InlineData(1000000, 3, 78498)]
    public void Test_Prime_Numbers_Count_Pi_n(int n, int x, int expected)
    {
        var minPairsCount = GoldbachHelper.CountMinPairs(n + 3, x) + 1;

        minPairsCount.Should().Be(expected);
    }

    [Theory]
    [InlineData(2, 3, 1)]
    [InlineData(3, 3, 2)]
    [InlineData(4, 3, 2)]
    [InlineData(5, 3, 3)]
    [InlineData(6, 3, 3)]
    [InlineData(7, 3, 4)]
    [InlineData(8, 3, 4)]
    [InlineData(9, 3, 4)]
    [InlineData(10, 3, 4)]
    [InlineData(11, 3, 5)]
    [InlineData(12, 3, 5)]
    [InlineData(13, 3, 6)]
    [InlineData(14, 3, 6)]
    [InlineData(15, 3, 6)]
    [InlineData(16, 3, 6)]
    [InlineData(17, 3, 7)]
    [InlineData(18, 3, 7)]
    [InlineData(19, 3, 8)]
    [InlineData(20, 3, 8)]
    [InlineData(21, 3, 8)]
    [InlineData(22, 3, 8)]
    [InlineData(23, 3, 9)]
    [InlineData(24, 3, 9)]
    [InlineData(25, 3, 9)]
    [InlineData(26, 3, 9)]
    [InlineData(27, 3, 9)]
    [InlineData(28, 3, 9)]
    [InlineData(29, 3, 10)]
    [InlineData(30, 3, 10)]
    [InlineData(31, 3, 11)]
    [InlineData(32, 3, 11)]
    [InlineData(33, 3, 11)]
    [InlineData(34, 3, 11)]
    [InlineData(35, 3, 11)]
    [InlineData(36, 3, 11)]
    [InlineData(37, 3, 12)]
    [InlineData(38, 3, 12)]
    [InlineData(39, 3, 12)]
    [InlineData(40, 3, 12)]
    [InlineData(41, 3, 13)]
    [InlineData(42, 3, 13)]
    [InlineData(43, 3, 14)]
    [InlineData(44, 3, 14)]
    [InlineData(45, 3, 14)]
    [InlineData(46, 3, 14)]
    [InlineData(47, 3, 15)]
    [InlineData(48, 3, 15)]
    [InlineData(49, 3, 15)]
    [InlineData(50, 3, 15)]
    [InlineData(51, 3, 15)]
    [InlineData(52, 3, 15)]
    [InlineData(53, 3, 16)]
    [InlineData(54, 3, 16)]
    [InlineData(55, 3, 16)]
    [InlineData(56, 3, 16)]
    [InlineData(57, 3, 16)]
    [InlineData(58, 3, 16)]
    [InlineData(59, 3, 17)]
    [InlineData(60, 3, 17)]
    [InlineData(61, 3, 18)]
    [InlineData(62, 3, 18)]
    [InlineData(63, 3, 18)]
    [InlineData(64, 3, 18)]
    [InlineData(65, 3, 18)]
    [InlineData(66, 3, 18)]
    [InlineData(67, 3, 19)]
    [InlineData(68, 3, 19)]
    [InlineData(69, 3, 19)]
    [InlineData(70, 3, 19)]
    [InlineData(71, 3, 20)]
    [InlineData(72, 3, 20)]
    [InlineData(73, 3, 21)]
    [InlineData(74, 3, 21)]
    [InlineData(75, 3, 21)]
    [InlineData(76, 3, 21)]
    [InlineData(77, 3, 21)]
    [InlineData(78, 3, 21)]
    [InlineData(79, 3, 22)]
    [InlineData(80, 3, 22)]
    [InlineData(81, 3, 22)]
    [InlineData(82, 3, 22)]
    [InlineData(83, 3, 23)]
    [InlineData(84, 3, 23)]
    [InlineData(85, 3, 23)]
    [InlineData(86, 3, 23)]
    [InlineData(87, 3, 23)]
    [InlineData(88, 3, 23)]
    [InlineData(89, 3, 24)]
    [InlineData(90, 3, 24)]
    [InlineData(91, 3, 24)]
    [InlineData(92, 3, 24)]
    [InlineData(93, 3, 24)]
    [InlineData(94, 3, 24)]
    [InlineData(95, 3, 24)]
    [InlineData(96, 3, 24)]
    [InlineData(97, 3, 25)]
    [InlineData(98, 3, 25)]
    [InlineData(99, 3, 25)]
    [InlineData(100, 3, 25)]
    public void Test_Prime_Count_From_1_To_100(int n, int x, int expected)
    {
        var result = GoldbachHelper.CountMinPairs(n + 3, x) + 1;
        result.Should().Be(expected);
    }
}